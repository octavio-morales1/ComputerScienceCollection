
(* Add exercise 3 *)

let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; size <= 3} 
in letrec add_bt_helper(t) = proc(num) {
  if num<<t.data
  then begin
    if number?(t.left)
    then t.left <= {data <= num; left <= 0; right <= 0}
    else ((add_bt_helper t.left) num)
  end else if t.data<<num
  then begin
    if number?(t.right)
    then t.right <= {data <= num; left <= 0; right <= 0}
    else ((add_bt_helper t.right) num)
  end else 0
}
in let add_bt = proc(t) {proc(v) {
  ((add_bt_helper t.root) v)
}}
in begin
     ((add_bt t1) 23);
     t1.size <= t1.size+1;
     debug(t1)		
   end